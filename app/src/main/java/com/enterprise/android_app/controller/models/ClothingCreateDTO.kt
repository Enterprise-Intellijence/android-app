/**
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models

import com.squareup.moshi.JsonClass
import io.swagger.client.models.CustomMoneyDTO
import io.swagger.client.models.ProductCategoryDTO
import io.swagger.client.models.ProductCreateDTO
import io.swagger.client.models.SizeDTO

/**
 * 
 * @param productGender 
 * @param clothingSize 
 * @param colour 
 */

class ClothingCreateDTO: ProductCreateDTO {
    constructor(
        title: kotlin.String? = null,
        description: kotlin.String? = null,
        productCost: CustomMoneyDTO,
        deliveryCost: CustomMoneyDTO,
        brand: kotlin.String? = null,
        condition: ProductCreateDTO.Condition? = null,
        productSize: ProductCreateDTO.ProductSize? = null,
        visibility: ProductCreateDTO.Visibility? = null,
        productCategory: ProductCategoryDTO? = null,
        productImages: kotlin.Array<kotlin.Array<kotlin.Byte>>? = null,
        type: kotlin.String,
        productGender: ProductGender,
        clothingSize: SizeDTO,
        colour: Colour
        ) : super(
            title,
            description,
            productCost,
            deliveryCost,
            brand,
            condition,
            productSize,
            visibility,
            productCategory,
            productImages,
            type)

    constructor(productCreateDTO: ProductCreateDTO,
                colour: ClothingCreateDTO.Colour,
                homeSize: SizeDTO,
                homeMaterial: ClothingCreateDTO.ProductGender): super(title = productCreateDTO.title,
        description = productCreateDTO.description,
        productCost = productCreateDTO.productCost,
        deliveryCost = productCreateDTO.deliveryCost,
        brand = productCreateDTO.brand,
        condition = productCreateDTO.condition,
        productSize = productCreateDTO.productSize,
        visibility = productCreateDTO.visibility,
        productCategory = productCreateDTO.productCategory,
        productImages = productCreateDTO.productImages,
        type = productCreateDTO.type)
    /**
    * 
    * Values: MALE,FEMALE,UNISEX
    */
    enum class ProductGender(val value: kotlin.String){
        MALE("MALE"),
        FEMALE("FEMALE"),
        UNISEX("UNISEX");
    }
    /**
    * 
    * Values: YELLOW,GREEN,BLUE,RED,BLACK,WHITE,MULTICOLOUR
    */
    enum class Colour(val value: kotlin.String){
        YELLOW("YELLOW"),
        GREEN("GREEN"),
        BLUE("BLUE"),
        RED("RED"),
        BLACK("BLACK"),
        WHITE("WHITE"),
        MULTICOLOUR("MULTICOLOUR");
    }
}