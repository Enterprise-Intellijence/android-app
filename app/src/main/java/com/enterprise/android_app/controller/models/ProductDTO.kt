/**
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models

import io.swagger.client.models.CustomMoneyDTO
import io.swagger.client.models.ProductCategoryDTO
import io.swagger.client.models.ProductImageDTO
import io.swagger.client.models.UserBasicDTO

/**
 * 
 * @param id 
 * @param title 
 * @param description 
 * @param productCost 
 * @param deliveryCost 
 * @param brand 
 * @param condition 
 * @param likesNumber 
 * @param seller 
 * @param productSize 
 * @param views 
 * @param uploadDate 
 * @param lastUpdateDate 
 * @param visibility 
 * @param availability 
 * @param productCategory 
 * @param usersThatLiked 
 * @param productImages 
 * @param type 
 */
data class ProductDTO (

    val id: kotlin.String,
    val title: kotlin.String,
    val description: kotlin.String? = null,
    val productCost: CustomMoneyDTO,
    val deliveryCost: CustomMoneyDTO,
    val brand: kotlin.String? = null,
    val condition: Condition,
    val likesNumber: kotlin.Int? = null,
    val seller: UserBasicDTO,
    val productSize: ProductSize,
    val views: kotlin.Int? = null,
    val uploadDate: java.time.LocalDateTime? = null,
    val lastUpdateDate: java.time.LocalDateTime? = null,
    val visibility: Visibility,
    val availability: Availability,
    val productCategory: ProductCategoryDTO,
    val usersThatLiked: kotlin.Array<UserBasicDTO>? = null,
    val productImages: kotlin.Array<ProductImageDTO>? = null,
    val type: kotlin.String
) {
    /**
    * 
    * Values: NEWWITHTAG,NEWWITHOUTTAG,VERYGOOD,GOOD,ACCEPTABLE
    */
    enum class Condition(val value: kotlin.String){
        NEW_WITH_TAG("New with tag"),
        NEW_WITHOUT_TAG("New without tag"),
        VERY_GOOD("Very good"),
        GOOD("Good"),
        ACCEPTABLE("Acceptable");
    }
    /**
    * 
    * Values: BIG,MEDIUM,SMALL
    */
    enum class ProductSize(val value: kotlin.String){
        BIG("BIG"),
        MEDIUM("MEDIUM"),
        SMALL("SMALL");
    }
    /**
    * 
    * Values: PUBLIC,PRIVATE
    */
    enum class Visibility(val value: kotlin.String){
        PUBLIC("PUBLIC"),
        PRIVATE("PRIVATE");
    }
    /**
    * 
    * Values: AVAILABLE,PENDING,UNAVAILABLE
    */
    enum class Availability(val value: kotlin.String){
        AVAILABLE("AVAILABLE"),
        PENDING("PENDING"),
        UNAVAILABLE("UNAVAILABLE");
    }
}